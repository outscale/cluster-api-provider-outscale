on:
  repository_dispatch:
    types:
      - release
jobs:
  example_matrix:
    runs-on: [self-hosted, linux]
    strategy:
      matrix:
        version: ${{ github.event.client_payload.versions }}
        include:
          - environment: eu-west-2
          - environment: cloudgouv-eu-west-1 
    environment: ${{ matrix.environment }}
    steps:
    - uses: actions/checkout@v3
      with:
        repository: outscale-dev/cluster-api-provider-outscale
        ref: main
        path: cluster-api-provider-outscale
    - name: Use rust with rustfmt
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        target: x86_64-unknown-linux-musl
    - name: Build json-format
      run: make build
      working-directory: ${{ github.workspace }}/cluster-api-provider-outscale/hack/json-format
      shell: bash                
    - name: Checkout image-builder
      uses: actions/checkout@v3
      with:
        repository: 'outscale-vbr/image-builder'
        path: "add-outscale-image"
        ref: add-outscale-image
    - uses: actions/setup-go@v3
      with:
        go-version: '1.18.7'
    - name: Install Packer
      run: make install-packer
      shell: bash
      working-directory: ${{ github.workspace }}/cluster-api-provider-outscale
    - name: generate file
      shell: bash
      run: |
        kubernetes_series=`echo ${{ matrix.version }} | cut -d "." -f1-2`
        kubernetes_semver=`echo ${{ matrix.version }}`
        ./json_format -r ${kubernetes_semver} -v ${kubernetes_series} -o overwrite-k8s.json 
        cat overwrite-k8s.json 
        cp overwrite-k8s.json  $GITHUB_WORKSPACE/add-outscale-image/images/capi
      working-directory: ${{ github.workspace }}/cluster-api-provider-outscale/hack/json-format/target/x86_64-unknown-linux-musl/release
      env:
         capi_image: ${{ github.workspace }}/add-outscale-image/images/capi"
    - name: Launch image-builder
      run: |
        sudo pip3 install setuptools-rust
        sudo pip3 install --upgrade pip
        export PATH=$HOME/.local/bin:$GITHUB_WORKSPACE/image-builder/images/capi/.local/bin:$PATH
        make deps-osc
        sudo groupadd -r packer && sudo useradd -m -s /bin/bash -r -g packer packer
        cp -rf $GITHUB_WORKSPACE/add-outscale-image/images/capi /tmp
        sudo chown -R packer:packer /tmp/capi
        sudo chmod -R 777 /tmp/capi
        sudo runuser -l packer -c "export LANG=C.UTF-8; export LC_ALL=C.UTF-8; export PACKER_LOG=1; export PATH=~packer/.local/bin/:/tmp/capi/.local/bin:$PATH; export OSC_ACCESS_KEY=${OSC_ACCESS_KEY}; export OSC_SECRET_KEY=${OSC_SECRET_KEY}; export OSC_REGION=${OSC_REGION}; export OSC_ACCOUNT_ID=${OSC_ACCOUNT_ID}; cd /tmp/capi; PACKER_VAR_FILES=overwrite-k8s.json make build-osc-all"
      shell: bash
      working-directory: "${{ github.workspace }}/add-outscale-image/images/capi"
      env:
         OSC_ACCESS_KEY: ${{secrets.OSC_ACCESS_KEY}}
         OSC_SECRET_KEY: ${{secrets.OSC_SECRET_KEY}}   
         OSC_REGION: ${{secrets.OSC_REGION}}
         OSC_ACCOUNT_ID: ${{secrets.OSC_ACCOUNT_ID}}
         CRYPTOGRAPHY_DONT_BUILD_RUST: 1
         PACKER_LOG: 1 
         LANG: C.UTF-8
         LC_ALL: C.UTF-8
