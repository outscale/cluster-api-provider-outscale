apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: "${CLUSTER_NAME}"
  labels:
    cni: "${CLUSTER_NAME}-crs-cni"
    ccm: "${CLUSTER_NAME}-crs-ccm"
spec:
  clusterNetwork:
    pods:
      cidrBlocks: ["10.42.0.0/16"]
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: OscCluster
    name:  "${CLUSTER_NAME}"
  controlPlaneRef:
    kind: KubeadmControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    name: "${CLUSTER_NAME}-control-plane"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OscCluster
metadata:
  name:  "${CLUSTER_NAME}"
spec:
  network:
    clusterName: "${CLUSTER_NAME}"
    loadBalancer:
      loadbalancername: "${CLUSTER_NAME}-k8s"
      clusterName: "${CLUSTER_NAME}"
    net:
      clusterName: "${CLUSTER_NAME}"
    internetService:
      clusterName: "${CLUSTER_NAME}"    
    natService:
      clusterName: "${CLUSTER_NAME}"
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: "${CLUSTER_NAME}-md-0"
spec:
  clusterName: "${CLUSTER_NAME}"
  replicas: ${WORKER_MACHINE_COUNT}
  selector:
    matchLabels:
  template:
    spec:
      clusterName: "${CLUSTER_NAME}"
      version: "${KUBERNETES_VERSION}"
      bootstrap:
        configRef:
          name: "${CLUSTER_NAME}-md-0"
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
      infrastructureRef:
        name: "${CLUSTER_NAME}-md-0"
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: OscMachineTemplate
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OscMachineTemplate
metadata:
  name: "${CLUSTER_NAME}-md-0"
spec:
  template:
    spec:
      node:
        clusterName: "${CLUSTER_NAME}"
        image:
          name: ubuntu-2004-2004-kubernetes-v1.22.11-2022-08-22
        keypair:
          name: cluster-api
        vm:
          clusterName: "${CLUSTER_NAME}"
          rootDisk:
            rootDiskSize: ${OSC_VOLUME_SIZE}
            rootDiskIops: ${OSC_IOPS} 
            rootDiskType: "${OSC_VOLUME_TYPE}"
          keypairName: "${OSC_KEYPAIR_NAME}"
          subregionName: ${OSC_SUBREGION_NAME}
          vmType: "${OSC_VM_TYPE}"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OscMachineTemplate
metadata:
  name: "${CLUSTER_NAME}-control-plane"
spec:
  template:
    spec:
      node:
        clusterName: "${CLUSTER_NAME}"
        image:
          name: ubuntu-2004-2004-kubernetes-v1.22.11-2022-08-22
        keypair:
          name: cluster-api
        vm:
          clusterName: "${CLUSTER_NAME}"
          keypairName: "${OSC_KEYPAIR_NAME}"
          rootDisk:
            rootDiskSize: ${OSC_VOLUME_SIZE}
            rootDiskIops: ${OSC_IOPS}
            rootDiskType: "${OSC_VOLUME_TYPE}"
          subregionName: ${OSC_SUBREGION_NAME}
          role: controlplane
          loadBalancerName: "${CLUSTER_NAME}-k8s"
          vmType: "${OSC_VM_TYPE}"
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: "${CLUSTER_NAME}-md-0"
spec:
  template:
    spec:
      files:
      - content: |
          #!/bin/sh
 
          curl https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64 -Lo /tmp/runc.amd64
          chmod +x /tmp/runc.amd64
          cp -f /tmp/runc.amd64 /usr/local/sbin/runc
        owner: root:root
        path: /tmp/set_runc.sh
        permissions: "0744"
      joinConfiguration:
        nodeRegistration:
          name: "{{ ds.meta_data.local_hostname }}"
          kubeletExtraArgs:
            cloud-provider: external
            provider-id: osc://'{{ ds.meta_data.instance_id }}'
      preKubeadmCommands:
        - sh /tmp/set_runc.sh
---
kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
metadata:
  name: "${CLUSTER_NAME}-control-plane"
spec:
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  machineTemplate:
    infrastructureRef:
      kind: OscMachineTemplate
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      name: "${CLUSTER_NAME}-control-plane"
  kubeadmConfigSpec:
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: osc://'{{ ds.meta_data.instance_id }}'
        name: '{{ ds.meta_data.local_hostname }}'
    files:
      - content: |
          #!/bin/sh

          curl https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64 -Lo /tmp/runc.amd64
          chmod +x /tmp/runc.amd64
          cp -f /tmp/runc.amd64 /usr/local/sbin/runc
        owner: root:root
        path: /tmp/set_runc.sh
        permissions: "0744"
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: osc://'{{ ds.meta_data.instance_id }}'
    preKubeadmCommands:
      - sh /tmp/set_runc.sh
  version: "${KUBERNETES_VERSION}"
