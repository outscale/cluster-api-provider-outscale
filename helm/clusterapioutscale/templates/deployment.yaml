{{- if .Values.deployment.enable }}
  {{ $root := . }}
  {{- with .Values.deployment }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: "{{ template "clusterapioutscale.controllermanager" $root }}"
    app: "{{ template "clusterapioutscale.fullname" $root }}"
    chart: "{{ $root.Chart.Name }}-{{ $root.Chart.Version }}"
    release: "{{ $root.Release.Name }}"
  name: "{{ template "clusterapioutscale.deployment" $root }}"
  namespace: {{ $root.Release.Namespace }}
spec:
  replicas: {{ .replicaCount | default "1" }}
  selector:
    matchLabels:
      control-plane: "{{ template "clusterapioutscale.controllermanager" $root }}"
  template:
    metadata:
      annotations:
        {{- range $key,$val := .annotations }}
        {{ $key }}: {{ $val }}
        {{- end }}
      labels:
      {{- range $key,$val := .labels }}
        {{ $key }}: {{ $val }}
      {{- end }}
        control-plane: "{{ template "clusterapioutscale.controllermanager" $root }}"
        chart: "{{ $root.Chart.Name }}-{{ $root.Chart.Version }}"
        release: "{{ $root.Release.Name }}"
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v={{ .verbosity }}
        {{- if .watchFilter }}
        - --watch-filter {{ .watchFilter }}
        {{- end}}
        image: {{ .proxyImage }}:{{ .proxyImageTag }}
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
      {{- if .proxyResources }}
        resources:
          requests:
            memory: {{ .proxyResources.memory.requests | default "128Mi" | quote }}
            cpu: {{ .proxyResources.cpu.requests | default "500m" | quote }}
          limits:
            memory: {{ .proxyResources.memory.limits | default "64Mi" | quote }}
            cpu: {{ .proxyResources.cpu.limits | default "10m" | quote }}
      {{- end }}
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        - --zap-log-level={{ .verbosity }}
        command:
        - /manager
        env:
        - name: OSC_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: access_key
              name: cluster-api-provider-outscale
              optional: true
        - name: OSC_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: secret_key
              name: cluster-api-provider-outscale
              optional: true
        - name: OSC_REGION
          valueFrom:
            secretKeyRef:
              key: region
              name: cluster-api-provider-outscale
              optional: true
        - name: BACKOFF_DURATION
          value: "{{ .backoffDuration }}"
        - name: BACKOFF_FACTOR
          value: "{{ .backoffFactor }}"
        - name: BACKOFF_STEPS
          value: "{{ .backoffSteps }}"
        image: {{ .image }}:{{ .imageTag }}
        imagePullPolicy: {{ .imagePullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
      {{- if.resources }}
        resources:
          requests:
            memory: {{ .resources.memory.requests | default "128Mi" | quote }}
            cpu: {{ .resources.cpu.requests | default "500m" | quote }}
          limits:
            memory: {{ .resources.memory.limits | default "64Mi" | quote }}
            cpu: {{ .resources.cpu.limits | default "10m" | quote }}
      {{- end }}
      {{- if .securityContext }}
        securityContext:
        {{- range $key, $val := .securityContext }}
          {{ $key }}: {{ $val }}
        {{- end }}
      {{- end }}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      {{- with .imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        runAsNonRoot: true
      serviceAccountName: {{ template "clusterapioutscale.serviceAccount" $root }}
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
  {{- end }}
{{- end }}
