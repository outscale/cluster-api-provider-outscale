clusterapioutscale: 
  deployment:
    # -- Enable deployment
    enable: true
    # -- Number of replica
    replicaccount: 1
    # -- Regitry credential to use
    registry_credential: harbor-dockerconfigjson
    # -- Additional annotions to use
    pods:
      annotations:
        kubectl.kubernetes.io/default-container: manager
    containers:
    # -- Outscale provider image
      image: outscale/cluster-api-outscale-controllers
    # -- Outscale provider image tag
      imageTag: "v0.1.0"
    # -- Proxy image
      imageProxy: gcr.io/kubebuilder/kube-rbac-proxy
    # -- Proxy imageTag
      imageProxyTag: "v0.8.0"
    # -- ImagePullPolcy to use (IfNotPresent, Never, Always)
      pullPolicy: IfNotPresent
    # -- Additional securityContext to add
      securityContext:
        allowPrivilegeEscalation: false
    # -- Container resource limit/requests (https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/)
      resources:
        memory:
          # -- Container memory requests
          requests: 20Mi
          # -- Container memory limits
          limits: 30Mi
        cpu:
          # -- Container cpu requests
          requests: 100m
          # -- Container cpu limts
          limits: 200m
    # -- Container resource limit/requests (https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/)
      resourcesproxy:
        memory:
          # -- Container proxy memory requests
          requests: 20Mi
          # -- Container proxy memory limits
          limits: 30Mi
        cpu:
          # -- Container proxy cpu requests
          requests: 100m
          # -- Container proxy cpu limits
          limits: 200m
  crd:
    # -- enable crd
    enable: True
  issuer:
    # -- enable issuer
    enable: True
  service:
    # -- enable service
    enable: True
  serviceAccount: 
    # -- enable serviceAccount
    enable: True
  webhookservice:
    # -- enable webhookservice
    enable: True
  configmap:
    # -- enable configmap
    enable: True
  metricsClusterRole:
    # -- enable metricsClusterRole
    enable: True
  proxyClusterRole:
    # -- enable proxyClusterRole
    enable: True
  proxyClusterRoleBinding:
    # -- enable proxyClusterRoleBinding
    enable: True
  managerClusterRole:
    # -- enable managerClusterRole
    enable: True
  managerClusterRoleBinding:
    # -- enable managerClusterRoleBinding
    enable: True
  leaderElectionRole:
    # -- enable leaderElectionRole
    enable: True
  leaderElectionRoleBinding:
    # -- enable leaderElectionRoleBinding
    enable: True
  mutatingWebhook:
    # -- enable mutatingWebhook
    enable: True
  validatingWebhook:
    # -- enable validatingWebhook
    enable: True
  certificate:
    # -- enable certificate
    enable: True
