apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  labels:
    ccm: external
    cni: rke2-osc-crs-0
    csi: external
  name: rke2-osc
  namespace: default
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
        - 192.168.0.0/16
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: RKE2ControlPlane
    name: rke2-osc-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
    kind: OscCluster
    name: rke2-osc
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OscCluster
metadata:
  name: rke2-osc
  namespace: default
spec:
  network:
    clusterName: rke2-osc
    subregionName: cloudgouv-eu-west-1a
    loadBalancer:
      loadbalancername: osc-k8s
      loadbalancertype: internet-facing
      subnetname: rke2-osc-subnet-public
      securitygroupname: rke2-osc-securitygroup-lb
      clusterName: rke2-osc
    net:
      name: rke2-osc-net
      clusterName: rke2-osc
      ipRange: "10.0.0.0/16"
    subnets:
      - name: rke2-osc-subnet-kcp
        ipSubnetRange: "10.0.4.0/24"
        subregionName: cloudgouv-eu-west-1a
      - name: rke2-osc-subnet-kw
        ipSubnetRange: "10.0.3.0/24"
        subregionName: cloudgouv-eu-west-1a
      - name: rke2-osc-subnet-public
        ipSubnetRange: "10.0.2.0/24"
        subregionName: cloudgouv-eu-west-1a
    publicIps:
      - name: rke2-osc-publicip-nat
    internetService:
      clusterName: rke2-osc
      name: rke2-osc-internetservice
    natService:
      clusterName: rke2-osc
      name: rke2-osc-natservice
      publicipname: rke2-osc-publicip-nat
      subnetname: rke2-osc-subnet-public
    bastion:
      clusterName: rke2-osc
      enable: false
    routeTables:
      - name: rke2-osc-routetable-kw
        subnets:
          - rke2-osc-subnet-kw
        routes:
          - name: rke2-osc-routes-kw
            targetName: rke2-osc-natservice
            targetType: nat
            destination: "0.0.0.0/0"
      - name: rke2-osc-routetable-kcp
        subnets:
          - rke2-osc-subnet-kcp
        routes:
          - name: rke2-osc-routes-kcp
            targetName: rke2-osc-natservice
            targetType: nat
            destination: "0.0.0.0/0"
      - name: rke2-osc-routetable-public
        subnets:
          - rke2-osc-subnet-public
        routes:
          - name: rke2-osc-routes-public
            targetName: rke2-osc-internetservice
            targetType: gateway
            destination: "0.0.0.0/0"
    securityGroups:
      - name: rke2-osc-securitygroups-kw
        description: Security Group with cluster-api
        securityGroupRules:
          - name: rke2-osc-securitygrouprule-api-kubelet-kw
            flow: Inbound
            ipProtocol: tcp
            # IpRange to authorize access to kubernetes endpoints (kube-apiserver), you must keep it and change it with a CIDR that best suits with your environment.
            ipRange: "10.0.3.0/24"
            fromPortRange: 10250
            toPortRange: 10250
          - name: rke2-osc-securitygrouprule-rke2-supervisor-kw
            flow: Inbound
            ipProtocol: tcp
            ipRange: "10.0.3.0/24"
            fromPortRange: 9345
            toPortRange: 9345
          - name: rke2-osc-securitygrouprule-rke2-supervisor-kcp
            flow: Inbound
            ipProtocol: tcp
            ipRange: "10.0.4.0/24"
            fromPortRange: 9345
            toPortRange: 9345
          - name: rke2-osc-securitygrouprule-api-kubelet-kcp
            flow: Inbound
            ipProtocol: tcp
            # IpRange to authorize access to kubernetes endpoints (kube-apiserver), you must keep it and change it with a CIDR that best suits with your environment.
            ipRange: "10.0.4.0/24"
            fromPortRange: 10250
            toPortRange: 10250
          - name: rke2-osc-securitygrouprule-kcp-nodeip-kw
            flow: Inbound
            ipProtocol: tcp
            # IpRange to authorize access to kubernetes endpoints (kube-apiserver), you must keep it and change it with a CIDR that best suits with your environment.
            ipRange: "10.0.3.0/24"
            fromPortRange: 30000
            toPortRange: 32767
          - name: rke2-osc-securitygrouprule-kcp-nodeip-kcp
            flow: Inbound
            ipProtocol: tcp
            # IpRange to authorize access to kubernetes endpoints (kube-apiserver), you must keep it and change it with a CIDR that best suits with your environment.
            ipRange: "10.0.4.0/24"
            fromPortRange: 30000
            toPortRange: 32767
          - name: rke2-osc-securitygrouprule-kw-bgp
            flow: Inbound
            ipProtocol: tcp
            ipRange: "10.0.0.0/16"
            fromPortRange: 179
            toPortRange: 179
      - name: rke2-osc-securitygroups-kcp
        description: Security Group with cluster-api
        securityGroupRules:
          - name: osc-rke2-supervisor-kcp
            flow: Inbound
            ipProtocol: tcp
            ipRange: "10.0.3.0/24"
            fromPortRange: 9345
            toPortRange: 9345
          - name: osc-rke2-supervision-kw
            flow: Inbound
            ipProtocol: tcp
            ipRange: "10.0.4.0/24"
            fromPortRange: 9345
            toPortRange: 9345
          - name: rke2-osc-securitygrouprule-api-kw
            flow: Inbound
            ipProtocol: tcp
            # IpRange to authorize access to kubernetes endpoints (kube-apiserver), you must keep it and change it with a CIDR that best suits with your environment.
            ipRange: "10.0.3.0/24"
            fromPortRange: 6443
            toPortRange: 6443
          - name: rke2-osc-securitygrouprule-api-kcp
            flow: Inbound
            ipProtocol: tcp
            # IpRange to authorize access to kubernetes endpoints (kube-apiserver), you must keep it and change it with a CIDR that best suits with your environment.
            ipRange: "10.0.4.0/24"
            fromPortRange: 6443
            toPortRange: 6443
          - name: rke2-osc-securitygrouprule-etcd
            flow: Inbound
            ipProtocol: tcp
            # IpRange to authorize access to kubernetes endpoints (kube-apiserver), you must keep it and change it with a CIDR that best suits with your environment.
            ipRange: "10.0.4.0/24"
            fromPortRange: 2378
            toPortRange: 2381
          - name: rke2-osc-securitygrouprule-kubelet-kcp
            flow: Inbound
            ipProtocol: tcp
            # IpRange to authorize access to kubernetes endpoints (kube-apiserver), you must keep it and change it with a CIDR that best suits with your environment.
            ipRange: "10.0.4.0/24"
            fromPortRange: 10250
            toPortRange: 10252
          - name: rke2-osc-securitygrouprule-kcp-bgp
            flow: Inbound
            ipProtocol: tcp
            ipRange: "10.0.0.0/16"
            fromPortRange: 179
            toPortRange: 179
          - name: rke2-osc-securitygrouprule-kw-nodeip-kw
            flow: Inbound
            ipProtocol: tcp
            # IpRange to authorize access to kubernetes endpoints (kube-apiserver), you must keep it and change it with a CIDR that best suits with your environment.
            ipRange: "10.0.3.0/24"
            fromPortRange: 30000
            toPortRange: 32767
          - name: rke2-osc-securitygrouprule-kw-nodeip-kcp
            flow: Inbound
            ipProtocol: tcp
            # IpRange to authorize access to kubernetes endpoints (kube-apiserver), you must keep it and change it with a CIDR that best suits with your environment.
            ipRange: "10.0.4.0/24"
            fromPortRange: 30000
            toPortRange: 32767
      - name: rke2-osc-securitygroup-lb
        description: Security Group lb with cluster-api
        securityGroupRules:
          - name: rke2-osc-securitygrouprule-lb
            flow: Inbound
            ipProtocol: tcp
            # IpRange to authorize access to kubernetes endpoints (kube-apiserver), you must keep it and change it with a CIDR that best suits with your environment.
            ipRange: "0.0.0.0/0"
            fromPortRange: 6443
            toPortRange: 6443
      - name: rke2-osc-securitygroups-node
        description: Security Group node with cluster-api
        tag: OscK8sMainSG
        securityGroupRules:
          - name: rke2-osc-securitygrouprule-calico-vxlan
            flow: Inbound
            ipProtocol: udp
            ipRange: "10.0.0.0/16"
            fromPortRange: 4789
            toPortRange: 4789
          - name: rke2-osc-securitygrouprule-calico-typha
            flow: Inbound
            ipProtocol: udp
            ipRange: "10.0.0.0/16"
            fromPortRange: 5473
            toPortRange: 5473
          - name: rke2-osc-securitygrouprule-calico-wireguard
            flow: Inbound
            ipProtocol: udp
            ipRange: "10.0.0.0/16"
            fromPortRange: 51820
            toPortRange: 51820
          - name: rke2-osc-securitygrouprule-calico-wireguard-ipv6
            flow: Inbound
            ipProtocol: udp
            ipRange: "10.0.0.0/16"
            fromPortRange: 51821
            toPortRange: 51821
          - name: rke2-osc-securitygrouprule-flannel
            flow: Inbound
            ipProtocol: udp
            ipRange: "10.0.0.0/16"
            fromPortRange: 4789
            toPortRange: 4789
          - name: rke2-osc-securitygrouperule-flannel-udp
            flow: Inbound
            ipProtocol: udp
            ipRange: "10.0.0.0/16"
            fromPortRange: 8285
            toPortRange: 8285
          - name: rke2-osc-securitygroup-flannel-vxlan
            flow: Inbound
            ipProtocol: udp
            ipRange: "10.0.0.0/16"
            fromPortRange: 8472
            toPortRange: 8472
---
apiVersion: controlplane.cluster.x-k8s.io/v1alpha1
kind: RKE2ControlPlane
metadata:
  name: rke2-osc-control-plane
  namespace: default
spec:
  agentConfig:
    version: v1.27.9+rke2r1
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: OscMachineTemplate
    name: rke2-osc-control-plane
  nodeDrainTimeout: 2m
  preRKE2Commands:
    - sudo hostnamectl set-hostname $(curl -s http://169.254.169.254/1.0/meta-data/hostname)
  replicas: 1
  serverConfig:
    cloudProviderName: external
    cni: calico
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OscMachineTemplate
metadata:
  name: "rke2-osc-control-plane"
  namespace: default
spec:
  template:
    spec:
      node:
        clusterName: rke2-osc
        image:
          name: ubuntu-2204-2204-rke2-v1.27.9-rke2r1
        keypair:
          name: rke2-osc
          deleteKeypair: false
        vm:
          clusterName: rke2-osc
          name: rke2-osc-vm-kcp
          keypairName: rke2-osc
          rootDisk:
            rootDiskSize: 30
            rootDiskIops: 1500
            rootDiskType: gp2
          deviceName: /dev/sda1
          subregionName: cloudgouv-eu-west-1a
          subnetName: rke2-osc-subnet-kcp
          role: controlplane
          loadBalancerName: osc-k8s
          securityGroupNames:
            - name: rke2-osc-securitygroups-kcp
            - name: rke2-osc-securitygroups-node
          vmType: "tinav6.c4r8p1"
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: rke2-osc-md-0
  namespace: default
spec:
  clusterName: rke2-osc
  replicas: 1
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: RKE2ConfigTemplate
          name: rke2-osc-md-0
      clusterName: rke2-aws
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
        kind: OscMachineTemplate
        name: rke2-osc-md-0
      version: v1.27.9+rke2r1
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OscMachineTemplate
metadata:
  name: "rke2-osc-md-0"
  namespace: default
spec:
  template:
    spec:
      node:
        clusterName: rke2-osc
        image:
          name: ubuntu-2204-2204-rke2-v1.27.9-rke2r1
        keypair:
          name: rke2-osc
          deleteKeypair: false
        vm:
          clusterName: rke2-osc
          name: rke2-osc-vm-kw
          keypairName: rke2-osc
          deviceName: /dev/sda1
          rootDisk:
            rootDiskSize: 30
            rootDiskIops: 1500
            rootDiskType: gp2
          subnetName: rke2-osc-subnet-kw
          subregionName: cloudgouv-eu-west-1a
          securityGroupNames:
            - name: rke2-osc-securitygroups-kw
            - name: rke2-osc-securitygroups-node
          vmType: "tinav6.c4r8p2"
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha1
kind: RKE2ConfigTemplate
metadata:
  name: rke2-osc-md-0
  namespace: default
spec:
  template:
    spec:
      preRKE2Commands:
        - sudo hostnamectl set-hostname $(curl -s http://169.254.169.254/1.0/meta-data/hostname)
      agentConfig:
        version: v1.27.9+rke2r1
