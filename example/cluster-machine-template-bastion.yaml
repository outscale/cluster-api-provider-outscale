apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: cluster-api
  namespace: default
  labels:
    cni: "cluster-api-crs-cni"
    ccm: "cluster-api-crs-ccm"
spec:
  clusterNetwork:
    pods:
      cidrBlocks: ["10.42.0.0/16"]
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: OscCluster
    name: cluster-api
    namespace: default
  controlPlaneRef:
    kind: KubeadmControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    name: "cluster-api-control-plane"
    namespace: default
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OscCluster
metadata:
  name: cluster-api
  namespace: default
spec:
  network:
    clusterName: cluster-api
    subregionName: eu-west-2a
    loadBalancer:
      loadbalancername: osc-k8s
      loadbalancertype: internet-facing
    net:
      ipRange: "10.0.0.0/16"
    subnets:
      - ipSubnetRange: "10.0.1.0/24"
        roles:
        - controlplane
      - ipSubnetRange: "10.0.2.0/24"
        roles:
        - worker
      - ipSubnetRange: "10.0.3.0/24"
        roles:
        - bastion
        - loadbalancer
        - nat
    bastion:
      enable: true
      name: cluster-api-vm-bastion
      keypairName: cluster-api
      imageName: ubuntu-22.04-2204-kubernetes-v1.29.1-2024-02-19
      rootDisk:
        rootDiskSize: 15
        rootDiskType: gp2
      vmType: "tinav6.c1r1p2"
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: "cluster-api-md-0"
  namespace: default
spec:
  clusterName: "cluster-api"
  replicas: 1
  selector:
    matchLabels:
  template:
    spec:
      clusterName: "cluster-api"
      version: "1.28.5"
      bootstrap:
        configRef:
          name: "cluster-api-md-0"
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          namespace: default
      infrastructureRef:
        name: "cluster-api-md-0"
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: OscMachineTemplate
        namespace: default
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OscMachineTemplate
metadata:
  name: "cluster-api-md-0"
  namespace: default
spec:
  template:
    spec:
      node:
        image:
          name: ubuntu-22.04-2204-kubernetes-v1.29.1-2024-02-19
          keypairName: cluster-api
          rootDisk:
            rootDiskSize: 30
            rootDiskType: gp2
          vmType: "tinav6.c4r8p2"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OscMachineTemplate
metadata:
  name: "cluster-api-control-plane"
  namespace: default
spec:
  template:
    spec:
      node:
        image:
         name: ubuntu-22.04-2204-kubernetes-v1.29.1-2024-02-19
        vm:
          name: cluster-api-vm-kcp
          keypairName: cluster-api
          rootDisk:
            rootDiskSize: 30
            rootDiskType: gp2
          role: controlplane
          vmType: "tinav5.c4r8p1"
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: "cluster-api-md-0"
  namespace: default
spec:
  template:
    spec:
      files:
      - content: |
          #!/bin/sh

          curl https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64 -Lo /tmp/runc.amd64
          chmod +x /tmp/runc.amd64
          cp -f /tmp/runc.amd64 /usr/local/sbin/runc
        owner: root:root
        path: /tmp/set_runc.sh
        permissions: "0744"
      joinConfiguration:
        nodeRegistration:
          name: "{{ ds.meta_data.local_hostname }}"
          kubeletExtraArgs:
            cloud-provider: external
            provider-id: osc://'{{ ds.meta_data.instance_id }}'
      preKubeadmCommands:
        - sh /tmp/set_runc.sh
---
kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
metadata:
  name: "cluster-api-control-plane"
spec:
  replicas: 1
  machineTemplate:
    infrastructureRef:
      kind: OscMachineTemplate
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      name: "cluster-api-control-plane"
      namespace: default
  kubeadmConfigSpec:
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: osc://'{{ ds.meta_data.instance_id }}'
        name: '{{ ds.meta_data.local_hostname }}'
    files:
    - content: |
        #!/bin/sh
        curl https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64 -Lo /tmp/runc.amd64
        chmod +x /tmp/runc.amd64
        cp -f /tmp/runc.amd64 /usr/local/sbin/runc
      owner: root:root
      path: /tmp/set_runc.sh
      permissions: "0744"
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: osc://'{{ ds.meta_data.instance_id }}'
    preKubeadmCommands:
      - sh /tmp/set_runc.sh
  version: "1.28.5"
