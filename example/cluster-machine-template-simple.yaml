apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: hello-osc
  namespace: default
  labels:
    cni: "hello-osc-crs-cni"
    ccm: "hello-osc-crs-ccm"
spec:
  clusterNetwork:
    pods:
      cidrBlocks: ["10.42.0.0/16"]
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: OscCluster
    name: hello-osc
    namespace: default
  controlPlaneRef:
    kind: KubeadmControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    name: "hello-osc-control-plane"
    namespace: default
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OscCluster
metadata:
  name: hello-osc
  namespace: default
spec:
  network:
    loadBalancer:
      loadbalancername: osc-k8s
      loadbalancertype: internet-facing
      subnetname: cluster-api-subnet-public
      securitygroupname: cluster-api-securitygroup-lb
    net:
      name: cluster-api-net
      ipRange: "10.0.0.0/24"
    subnets:
      - name: cluster-api-subnet-kcp
        ipSubnetRange: "10.0.0.32/28"
      - name: cluster-api-subnet-kw
        ipSubnetRange: "10.0.0.128/26"
      - name: cluster-api-subnet-public
        ipSubnetRange: "10.0.0.8/29"
      - name: cluster-api-subnet-nat
        ipSubnetRange: "10.0.0.0/29"
    publicIps:
      - name: cluster-api-publicip-nat
    internetService:
      name: cluster-api-internetservice
    natService:
      name: cluster-api-natservice
      publicipname: cluster-api-publicip-nat
      subnetname: cluster-api-subnet-nat
    routeTables:
      - name: cluster-api-routetable-kw
        subnetname: cluster-api-subnet-kw
        routes:
          - name: cluster-api-routes-kw
            targetName: cluster-api-natservice
            targetType: nat
            destination: "0.0.0.0/0"
      - name: cluster-api-routetable-kcp
        subnetname: cluster-api-subnet-kcp
        routes:
          - name: cluster-api-routes-kcp
            targetName: cluster-api-natservice	
            targetType: nat
            destination: "0.0.0.0/0"
      - name: cluster-api-routetable-nat
        subnetname: cluster-api-subnet-nat
        routes:
          - name: cluster-api-routes-nat
            targetName: cluster-api-internetservice
            targetType: gateway
            destination: "0.0.0.0/0"
      - name: cluster-api-routetable-public
        subnetname: cluster-api-subnet-public
        routes:
          - name: cluster-api-routes-public
            targetName: cluster-api-internetservice
            targetType: gateway
            destination: "0.0.0.0/0"
    securityGroups:
      - name: cluster-api-securitygroups-kw
        description: Security Group with cluster-api   
        securityGroupRules:
          - name: cluster-api-securitygrouprule-api-kubelet-kw
            flow: Inbound
            ipProtocol: tcp
# IpRange to authorize access to kubernetes endpoints (kube-apiserver), you must keep it and change it with a CIDR that best suits with your environment.
            ipRange: "10.0.0.128/26"
            fromPortRange: 10250
            toPortRange: 10250
          - name: cluster-api-securitygrouprule-api-kubelet-kcp
            flow: Inbound
            ipProtocol: tcp
# IpRange to authorize access to kubernetes endpoints (kube-apiserver), you must keep it and change it with a CIDR that best suits with your environment.
            ipRange: "10.0.0.32/28"
            fromPortRange: 10250
            toPortRange: 10250
          - name: cluster-api-securitygrouprule-nodeip-kw
            flow: Inbound
            ipProtocol: tcp
# IpRange to authorize access to kubernetes endpoints (kube-apiserver), you must keep it and change it with a CIDR that best suits with your environment.
            ipRange: "10.0.0.128/26"
            fromPortRange: 30000
            toPortRange: 32767
          - name: cluster-api-securitygrouprule-nodeip-kcp
            flow: Inbound
            ipProtocol: tcp
# IpRange to authorize access to kubernetes endpoints (kube-apiserver), you must keep it and change it with a CIDR that best suits with your environment.
            ipRange: "10.0.0.32/28"
            fromPortRange: 30000
            toPortRange: 32767
      - name: cluster-api-securitygroups-kcp
        description: Security Group with cluster-api
        securityGroupRules:
          - name: cluster-api-securitygrouprule-api-kw
            flow: Inbound
            ipProtocol: tcp
# IpRange to authorize access to kubernetes endpoints (kube-apiserver), you must keep it and change it with a CIDR that best suits with your environment.
            ipRange: "10.0.0.128/26"
            fromPortRange: 6443
            toPortRange: 6443
          - name: cluster-api-securitygrouprule-api-kcp
            flow: Inbound
            ipProtocol: tcp
# IpRange to authorize access to kubernetes endpoints (kube-apiserver), you must keep it and change it with a CIDR that best suits with your environment.
            ipRange: "10.0.0.32/28"
            fromPortRange: 6443
            toPortRange: 6443
          - name: cluster-api-securitygrouprule-etcd
            flow: Inbound
            ipProtocol: tcp
# IpRange to authorize access to kubernetes endpoints (kube-apiserver), you must keep it and change it with a CIDR that best suits with your environment.
            ipRange: "10.0.0.32/28"
            fromPortRange: 2378
            toPortRange: 2379
          - name: cluster-api-securitygrouprule-kubelet-kcp
            flow: Inbound
            ipProtocol: tcp
# IpRange to authorize access to kubernetes endpoints (kube-apiserver), you must keep it and change it with a CIDR that best suits with your environment.
            ipRange: "10.0.0.32/28"
            fromPortRange: 10250
            toPortRange: 10252
      - name: cluster-api-securitygroup-lb
        description: Security Group with cluster-api
        securityGroupRules:
          - name: cluste-api-securitygrouprule-lb
            flow: Inbound
            ipProtocol: tcp
# IpRange to authorize access to kubernetes endpoints (kube-apiserver), you must keep it and change it with a CIDR that best suits with your environment.
            ipRange: "0.0.0.0/0"
            fromPortRange: 6443
            toPortRange: 6443
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: "hello-osc-md-0"
  namespace: default
spec:
  clusterName: "hello-osc"
  replicas: 1
  selector:
    matchLabels:
  template:
    spec:
      clusterName: "hello-osc"
      version: "1.22.11"
      bootstrap:
        configRef:
          name: "hello-osc-md-0"
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          namespace: default
      infrastructureRef:
        name: "hello-osc-md-0"
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: OscMachineTemplate
        namespace: default
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OscMachineTemplate
metadata:
  name: "hello-osc-md-0"
  namespace: default
spec:
  template:
    spec:
      node:
        vm:
          name: cluster-api-vm-kw
          imageId: ami-e1a786f1
          keypairName: cluster-api
          deviceName: /dev/sda1
          rootDisk:
            rootDiskSize: 30
            rootDiskIops: 1500
            rootDiskType: io1
          subnetName: cluster-api-subnet-kw
          subregionName: eu-west-2a
          securityGroupNames:
            - name: cluster-api-securitygroups-kw
          privateIps:
            - name: cluster-api-kw-privateip-kw
              privateIp: "10.0.0.138"
          vmType: "tinav4.c2r4p2"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OscMachineTemplate
metadata:
  name: "hello-osc-control-plane"
  namespace: default
spec:
  template:
    spec:
      node:
        vm:
          name: cluster-api-vm-kcp
          imageId: ami-e1a786f1
          keypairName: cluster-api
          rootDisk:
            rootDiskSize: 30
            rootDiskIops: 1500
            rootDiskType: io1
          deviceName: /dev/sda1
          subregionName: eu-west-2a
          subnetName: cluster-api-subnet-kcp
          role: controlplane
          loadBalancerName: osc-k8s
          securityGroupNames:
            - name: cluster-api-securitygroups-kcp
          privateIps:
            - name: cluster-api-privateip-kcp
              privateIp: "10.0.0.38"
          vmType: "tinav5.c4r8p1"
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: "hello-osc-md-0"
  namespace: default
spec:
  template:
    spec:
      files:
      - content: |
          #!/bin/sh
 
          curl https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64 -Lo /tmp/runc.amd64
          chmod +x /tmp/runc.amd64
          cp -f /tmp/runc.amd64 /usr/local/sbin/runc
        owner: root:root
        path: /tmp/set_runc.sh
        permissions: "0744"
      joinConfiguration:
        nodeRegistration:
          name: "{{ ds.meta_data.local_hostname }}"
          kubeletExtraArgs:
            cloud-provider: external
            provider-id: osc://'{{ ds.meta_data.instance_id }}'
      preKubeadmCommands:
        - sh /tmp/set_runc.sh
---
kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
metadata:
  name: "hello-osc-control-plane"
spec:
  replicas: 1
  machineTemplate:
    infrastructureRef:
      kind: OscMachineTemplate
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      name: "hello-osc-control-plane"
      namespace: default
  kubeadmConfigSpec:
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: osc://'{{ ds.meta_data.instance_id }}'
        name: '{{ ds.meta_data.local_hostname }}'
    files:
    - content: |
        #!/bin/sh

        curl https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64 -Lo /tmp/runc.amd64
        chmod +x /tmp/runc.amd64	
        cp -f /tmp/runc.amd64 /usr/local/sbin/runc
      owner: root:root
      path: /tmp/set_runc.sh
      permissions: "0744"
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
    preKubeadmCommands:
      - sh /tmp/set_runc.sh
  version: "1.22.11"
