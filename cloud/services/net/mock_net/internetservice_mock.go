// Code generated by MockGen. DO NOT EDIT.
// Source: ./internetservice.go

// Package mock_net is a generated GoMock package.
package mock_net

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	osc "github.com/outscale/osc-sdk-go/v2"
)

// MockOscInternetServiceInterface is a mock of OscInternetServiceInterface interface.
type MockOscInternetServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOscInternetServiceInterfaceMockRecorder
}

// MockOscInternetServiceInterfaceMockRecorder is the mock recorder for MockOscInternetServiceInterface.
type MockOscInternetServiceInterfaceMockRecorder struct {
	mock *MockOscInternetServiceInterface
}

// NewMockOscInternetServiceInterface creates a new mock instance.
func NewMockOscInternetServiceInterface(ctrl *gomock.Controller) *MockOscInternetServiceInterface {
	mock := &MockOscInternetServiceInterface{ctrl: ctrl}
	mock.recorder = &MockOscInternetServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOscInternetServiceInterface) EXPECT() *MockOscInternetServiceInterfaceMockRecorder {
	return m.recorder
}

// CreateInternetService mocks base method.
func (m *MockOscInternetServiceInterface) CreateInternetService(internetServiceName string) (*osc.InternetService, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInternetService", internetServiceName)
	ret0, _ := ret[0].(*osc.InternetService)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateInternetService indicates an expected call of CreateInternetService.
func (mr *MockOscInternetServiceInterfaceMockRecorder) CreateInternetService(internetServiceName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInternetService", reflect.TypeOf((*MockOscInternetServiceInterface)(nil).CreateInternetService), internetServiceName)
}

// DeleteInternetService mocks base method.
func (m *MockOscInternetServiceInterface) DeleteInternetService(internetServiceID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteInternetService", internetServiceID)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteInternetService indicates an expected call of DeleteInternetService.
func (mr *MockOscInternetServiceInterfaceMockRecorder) DeleteInternetService(internetServiceID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteInternetService", reflect.TypeOf((*MockOscInternetServiceInterface)(nil).DeleteInternetService), internetServiceID)
}

// GetInternetService mocks base method.
func (m *MockOscInternetServiceInterface) GetInternetService(internetServiceID string) (*osc.InternetService, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInternetService", internetServiceID)
	ret0, _ := ret[0].(*osc.InternetService)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInternetService indicates an expected call of GetInternetService.
func (mr *MockOscInternetServiceInterfaceMockRecorder) GetInternetService(internetServiceID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInternetService", reflect.TypeOf((*MockOscInternetServiceInterface)(nil).GetInternetService), internetServiceID)
}

// LinkInternetService mocks base method.
func (m *MockOscInternetServiceInterface) LinkInternetService(internetServiceID, netID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LinkInternetService", internetServiceID, netID)
	ret0, _ := ret[0].(error)
	return ret0
}

// LinkInternetService indicates an expected call of LinkInternetService.
func (mr *MockOscInternetServiceInterfaceMockRecorder) LinkInternetService(internetServiceID, netID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LinkInternetService", reflect.TypeOf((*MockOscInternetServiceInterface)(nil).LinkInternetService), internetServiceID, netID)
}

// UnlinkInternetService mocks base method.
func (m *MockOscInternetServiceInterface) UnlinkInternetService(internetServiceID, netID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UnlinkInternetService", internetServiceID, netID)
	ret0, _ := ret[0].(error)
	return ret0
}

// UnlinkInternetService indicates an expected call of UnlinkInternetService.
func (mr *MockOscInternetServiceInterfaceMockRecorder) UnlinkInternetService(internetServiceID, netID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UnlinkInternetService", reflect.TypeOf((*MockOscInternetServiceInterface)(nil).UnlinkInternetService), internetServiceID, netID)
}
