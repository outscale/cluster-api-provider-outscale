// Code generated by MockGen. DO NOT EDIT.
// Source: ./publicip.go

// Package mock_security is a generated GoMock package.
package mock_security

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	osc "github.com/outscale/osc-sdk-go/v2"
)

// MockOscPublicIPInterface is a mock of OscPublicIPInterface interface.
type MockOscPublicIPInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOscPublicIPInterfaceMockRecorder
}

// MockOscPublicIPInterfaceMockRecorder is the mock recorder for MockOscPublicIPInterface.
type MockOscPublicIPInterfaceMockRecorder struct {
	mock *MockOscPublicIPInterface
}

// NewMockOscPublicIPInterface creates a new mock instance.
func NewMockOscPublicIPInterface(ctrl *gomock.Controller) *MockOscPublicIPInterface {
	mock := &MockOscPublicIPInterface{ctrl: ctrl}
	mock.recorder = &MockOscPublicIPInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOscPublicIPInterface) EXPECT() *MockOscPublicIPInterfaceMockRecorder {
	return m.recorder
}

// CheckPublicIPUnlink mocks base method.
func (m *MockOscPublicIPInterface) CheckPublicIPUnlink(clockInsideLoop, clockLoop time.Duration, publicIPID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckPublicIPUnlink", clockInsideLoop, clockLoop, publicIPID)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckPublicIPUnlink indicates an expected call of CheckPublicIPUnlink.
func (mr *MockOscPublicIPInterfaceMockRecorder) CheckPublicIPUnlink(clockInsideLoop, clockLoop, publicIPID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckPublicIPUnlink", reflect.TypeOf((*MockOscPublicIPInterface)(nil).CheckPublicIPUnlink), clockInsideLoop, clockLoop, publicIPID)
}

// CreatePublicIP mocks base method.
func (m *MockOscPublicIPInterface) CreatePublicIP(publicIPName string) (*osc.PublicIp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePublicIP", publicIPName)
	ret0, _ := ret[0].(*osc.PublicIp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePublicIP indicates an expected call of CreatePublicIP.
func (mr *MockOscPublicIPInterfaceMockRecorder) CreatePublicIP(publicIPName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePublicIP", reflect.TypeOf((*MockOscPublicIPInterface)(nil).CreatePublicIP), publicIPName)
}

// DeletePublicIP mocks base method.
func (m *MockOscPublicIPInterface) DeletePublicIP(publicIPID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeletePublicIP", publicIPID)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeletePublicIP indicates an expected call of DeletePublicIP.
func (mr *MockOscPublicIPInterfaceMockRecorder) DeletePublicIP(publicIPID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletePublicIP", reflect.TypeOf((*MockOscPublicIPInterface)(nil).DeletePublicIP), publicIPID)
}

// GetPublicIP mocks base method.
func (m *MockOscPublicIPInterface) GetPublicIP(publicIPID string) (*osc.PublicIp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPublicIP", publicIPID)
	ret0, _ := ret[0].(*osc.PublicIp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPublicIP indicates an expected call of GetPublicIP.
func (mr *MockOscPublicIPInterfaceMockRecorder) GetPublicIP(publicIPID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPublicIP", reflect.TypeOf((*MockOscPublicIPInterface)(nil).GetPublicIP), publicIPID)
}

// LinkPublicIP mocks base method.
func (m *MockOscPublicIPInterface) LinkPublicIP(publicIPID, vmID string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LinkPublicIP", publicIPID, vmID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LinkPublicIP indicates an expected call of LinkPublicIP.
func (mr *MockOscPublicIPInterfaceMockRecorder) LinkPublicIP(publicIPID, vmID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LinkPublicIP", reflect.TypeOf((*MockOscPublicIPInterface)(nil).LinkPublicIP), publicIPID, vmID)
}

// UnlinkPublicIP mocks base method.
func (m *MockOscPublicIPInterface) UnlinkPublicIP(linkPublicIPId string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UnlinkPublicIP", linkPublicIPId)
	ret0, _ := ret[0].(error)
	return ret0
}

// UnlinkPublicIP indicates an expected call of UnlinkPublicIP.
func (mr *MockOscPublicIPInterfaceMockRecorder) UnlinkPublicIP(linkPublicIPId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UnlinkPublicIP", reflect.TypeOf((*MockOscPublicIPInterface)(nil).UnlinkPublicIP), linkPublicIPId)
}

// ValidatePublicIPIds mocks base method.
func (m *MockOscPublicIPInterface) ValidatePublicIPIds(publicIPIds []string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidatePublicIPIds", publicIPIds)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidatePublicIPIds indicates an expected call of ValidatePublicIPIds.
func (mr *MockOscPublicIPInterfaceMockRecorder) ValidatePublicIPIds(publicIPIds interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidatePublicIPIds", reflect.TypeOf((*MockOscPublicIPInterface)(nil).ValidatePublicIPIds), publicIPIds)
}
