// Code generated by MockGen. DO NOT EDIT.
// Source: ./nic.go

// Package mock_security is a generated GoMock package.
package mock_security

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	osc "github.com/outscale/osc-sdk-go/v2"
)

// MockOscNicInterface is a mock of OscNicInterface interface.
type MockOscNicInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOscNicInterfaceMockRecorder
}

// MockOscNicInterfaceMockRecorder is the mock recorder for MockOscNicInterface.
type MockOscNicInterfaceMockRecorder struct {
	mock *MockOscNicInterface
}

// NewMockOscNicInterface creates a new mock instance.
func NewMockOscNicInterface(ctrl *gomock.Controller) *MockOscNicInterface {
	mock := &MockOscNicInterface{ctrl: ctrl}
	mock.recorder = &MockOscNicInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOscNicInterface) EXPECT() *MockOscNicInterfaceMockRecorder {
	return m.recorder
}

// CreateNic mocks base method.
func (m *MockOscNicInterface) CreateNic(nicName, subnetId string) (*osc.Nic, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNic", nicName, subnetId)
	ret0, _ := ret[0].(*osc.Nic)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateNic indicates an expected call of CreateNic.
func (mr *MockOscNicInterfaceMockRecorder) CreateNic(nicName, subnetId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNic", reflect.TypeOf((*MockOscNicInterface)(nil).CreateNic), nicName, subnetId)
}

// DeleteNic mocks base method.
func (m *MockOscNicInterface) DeleteNic(nicId string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteNic", nicId)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteNic indicates an expected call of DeleteNic.
func (mr *MockOscNicInterfaceMockRecorder) DeleteNic(nicId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteNic", reflect.TypeOf((*MockOscNicInterface)(nil).DeleteNic), nicId)
}

// GetNic mocks base method.
func (m *MockOscNicInterface) GetNic(nicId string) (*osc.Nic, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNic", nicId)
	ret0, _ := ret[0].(*osc.Nic)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNic indicates an expected call of GetNic.
func (mr *MockOscNicInterfaceMockRecorder) GetNic(nicId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNic", reflect.TypeOf((*MockOscNicInterface)(nil).GetNic), nicId)
}
