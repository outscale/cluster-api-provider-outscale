// Code generated by MockGen. DO NOT EDIT.
// Source: ./keypair.go
//
// Generated by this command:
//
//	mockgen -destination mock_security/keypair_mock.go -package mock_security -source ./keypair.go
//

// Package mock_security is a generated GoMock package.
package mock_security

import (
	context "context"
	reflect "reflect"

	osc "github.com/outscale/osc-sdk-go/v2"
	gomock "go.uber.org/mock/gomock"
)

// MockOscKeyPairInterface is a mock of OscKeyPairInterface interface.
type MockOscKeyPairInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOscKeyPairInterfaceMockRecorder
	isgomock struct{}
}

// MockOscKeyPairInterfaceMockRecorder is the mock recorder for MockOscKeyPairInterface.
type MockOscKeyPairInterfaceMockRecorder struct {
	mock *MockOscKeyPairInterface
}

// NewMockOscKeyPairInterface creates a new mock instance.
func NewMockOscKeyPairInterface(ctrl *gomock.Controller) *MockOscKeyPairInterface {
	mock := &MockOscKeyPairInterface{ctrl: ctrl}
	mock.recorder = &MockOscKeyPairInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOscKeyPairInterface) EXPECT() *MockOscKeyPairInterfaceMockRecorder {
	return m.recorder
}

// CreateKeyPair mocks base method.
func (m *MockOscKeyPairInterface) CreateKeyPair(ctx context.Context, keypairName string) (*osc.KeypairCreated, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateKeyPair", ctx, keypairName)
	ret0, _ := ret[0].(*osc.KeypairCreated)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateKeyPair indicates an expected call of CreateKeyPair.
func (mr *MockOscKeyPairInterfaceMockRecorder) CreateKeyPair(ctx, keypairName any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateKeyPair", reflect.TypeOf((*MockOscKeyPairInterface)(nil).CreateKeyPair), ctx, keypairName)
}

// DeleteKeyPair mocks base method.
func (m *MockOscKeyPairInterface) DeleteKeyPair(ctx context.Context, keypairName string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteKeyPair", ctx, keypairName)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteKeyPair indicates an expected call of DeleteKeyPair.
func (mr *MockOscKeyPairInterfaceMockRecorder) DeleteKeyPair(ctx, keypairName any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteKeyPair", reflect.TypeOf((*MockOscKeyPairInterface)(nil).DeleteKeyPair), ctx, keypairName)
}

// GetKeyPair mocks base method.
func (m *MockOscKeyPairInterface) GetKeyPair(ctx context.Context, keyPairName string) (*osc.Keypair, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKeyPair", ctx, keyPairName)
	ret0, _ := ret[0].(*osc.Keypair)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetKeyPair indicates an expected call of GetKeyPair.
func (mr *MockOscKeyPairInterfaceMockRecorder) GetKeyPair(ctx, keyPairName any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKeyPair", reflect.TypeOf((*MockOscKeyPairInterface)(nil).GetKeyPair), ctx, keyPairName)
}
